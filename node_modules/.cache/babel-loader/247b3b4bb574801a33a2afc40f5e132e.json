{"ast":null,"code":"var _jsxFileName = \"/home/rakshat/Desktop/Covid19India/src/GeoChart.js\";\nimport React, { Component } from 'react';\nimport { Chart } from \"react-google-charts\";\nconst states = [];\nconst confirmedcases = [];\nconst recovered = [];\nconst death = [];\nconst geodata = [['States', 'Confirmed Cases', 'Recovered', 'Deaths']];\nconst initialState = {\n  chartData: []\n};\n\nclass GeoChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialState\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.covid19india.org/data.json\").then(response => response.json()).then(data => {\n      this.storeData(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  storeData(data) {\n    for (let i = 1; i < data.statewise.length; i = i + 1) {\n      states.push(data.statewise[i].state);\n      confirmedcases.push(parseInt(data.statewise[i].confirmed));\n      recovered.push(parseInt(data.statewise[i].recovered));\n      death.push(parseInt(data.statewise[i].deaths));\n    }\n\n    console.log(states);\n    console.log(confirmedcases);\n\n    for (let i = 0; i < states.length; i = i + 1) {\n      geodata.push([states[i], confirmedcases[i], recovered[i], death[i]]);\n    }\n\n    this.setState({\n      chartData: geodata\n    }); // console.log(this.state.chartData)\n  }\n\n  render() {\n    console.log(this.state.chartData);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      width: '570px',\n      height: '550px',\n      chartType: \"BarChart\",\n      data: this.state.chartData,\n      options: {\n        title: 'State Comparison',\n        chartArea: {\n          width: '50%'\n        },\n        isStacked: true,\n        hAxis: {\n          title: 'Data',\n          minValue: 0\n        },\n        vAxis: {\n          title: 'States'\n        }\n      } // For tests\n      ,\n      rootProps: {\n        'data-testid': '3'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default GeoChart;","map":{"version":3,"sources":["/home/rakshat/Desktop/Covid19India/src/GeoChart.js"],"names":["React","Component","Chart","states","confirmedcases","recovered","death","geodata","initialState","chartData","GeoChart","constructor","props","state","componentDidMount","fetch","then","response","json","data","storeData","catch","err","console","log","i","statewise","length","push","parseInt","confirmed","deaths","setState","render","title","chartArea","width","isStacked","hAxis","minValue","vAxis"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Chart } from \"react-google-charts\";\n\nconst states=[]\nconst confirmedcases=[]\nconst recovered=[]\nconst death=[]\nconst geodata=[['States','Confirmed Cases','Recovered','Deaths']]\nconst initialState={\n    chartData:[]\n}\nclass GeoChart extends Component{\n\n    constructor(props){\n        super(props);\n        this.state={\n            initialState\n        }\n    }\n\n    componentDidMount(){\n        fetch(\"https://api.covid19india.org/data.json\")\n        .then(response => response.json())\n        .then((data)=>{\n            this.storeData(data)\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n    storeData(data){\n        for(let i=1;i<data.statewise.length;i=i+1){\n            states.push(data.statewise[i].state)\n            confirmedcases.push(parseInt(data.statewise[i].confirmed))\n            recovered.push(parseInt(data.statewise[i].recovered))\n            death.push(parseInt(data.statewise[i].deaths))\n        }\n        console.log(states)\n        console.log(confirmedcases)\n\n        for(let i = 0;i<states.length;i=i+1){\n            geodata.push([states[i],confirmedcases[i],recovered[i],death[i]])\n        }\n\n        this.setState({chartData:geodata})\n        // console.log(this.state.chartData)\n    }\n\n    render(){\n        console.log(this.state.chartData)\n        return(\n            <div className=\"mb3\">\n                <Chart\n                width={'570px'}\n                height={'550px'}\n                chartType=\"BarChart\"\n                data={this.state.chartData}\n                options={{\n                    title: 'State Comparison',\n                    chartArea: { width: '50%' },\n                    isStacked: true,\n                    hAxis: {\n                    title: 'Data',\n                    minValue: 0,\n                    },\n                    vAxis: {\n                    title: 'States',\n                    },\n                }}\n                // For tests\n                rootProps={{ 'data-testid': '3' }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default GeoChart;\n"]},"metadata":{},"sourceType":"module"}